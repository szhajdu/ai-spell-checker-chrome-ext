name: Build and Publish Chrome Extension

on:
  push:
    tags:
      - 'v*'  # Runs only when a tag starting with 'v' is pushed
  workflow_dispatch:
    # Allow manual trigger for testing

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.version.outputs.VERSION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Extract version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Validate package.json version
        run: |
          PACKAGE_VERSION=$(jq -r '.version' package.json)
          if [[ "${{ steps.version.outputs.VERSION }}" != "$PACKAGE_VERSION" ]]; then
            echo "::error::Version mismatch: tag (${{ steps.version.outputs.VERSION }}) != package.json ($PACKAGE_VERSION)"
            exit 1
          fi

      - name: Build extension
        run: yarn build

      - name: Create extension package
        run: |
          mkdir -p dist
          # Create a directory with the same name as the zip will have
          PACKAGE_DIR="ai-spell-checker-v$VERSION"
          mkdir -p "$PACKAGE_DIR"
          
          # Copy required files to this directory
          cp -r manifest.json icons/ dist/ _locales/ "$PACKAGE_DIR/"
          
          # Create zip from the directory (not the files directly)
          zip -r "dist/$PACKAGE_DIR.zip" "$PACKAGE_DIR" \
            -x "**/.git/**" -x "**/node_modules/**" -x "**/.github/**"
          
          # Clean up the temporary directory
          rm -rf "$PACKAGE_DIR"

      - name: Upload extension artifact
        uses: actions/upload-artifact@v4
        with:
          name: extension-package
          path: dist/ai-spell-checker-v${{ env.VERSION }}.zip
          retention-days: 7

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Download extension package
        uses: actions/download-artifact@v4
        with:
          name: extension-package
          path: ./

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ai-spell-checker-v${{ needs.build.outputs.VERSION }}.zip
          generate_release_notes: true
          draft: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
